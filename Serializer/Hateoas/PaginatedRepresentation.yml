Hateoas\Representation\PaginatedRepresentation:
    exclusion_policy: all
    xml_root: collection
    accessor_order: custom
    custom_accessor_order: [page, limit, pages, total]
    relations:
      - rel: self
        href:
          route: expr(object.getRoute())
          parameters: expr(object.getParameters())
          absolute: true
        exclusion:
          groups: [Default, Hateoas]
      - rel: first
        href:
          route: expr(object.getRoute())
          parameters: expr(object.getParameters(1))
          absolute: true
        exclusion:
          groups: [Default, Hateoas]
      - rel: last
        href:
          route: expr(object.getRoute())
          parameters: expr(object.getParameters(object.getPages()))
          absolute: true
        exclusion:
          groups: [Default, Hateoas]
          exclude_if: expr(object.getPages() === null)
      - rel: next
        href:
          route: expr(object.getRoute())
          parameters: expr(object.getParameters(object.getPage()+1))
          absolute: true
        exclusion:
          groups: [Default, Hateoas]
          exclude_if: expr(object.getPages() !== null && (object.getPage() + 1) > object.getPages())
      - rel: previous
        href:
          route: expr(object.getRoute())
          parameters: expr(object.getParameters(object.getPage()-1))
          absolute: true
        exclusion:
          groups: [Default, Hateoas]
          exclude_if: expr((object.getPage() - 1) < 1)
    properties:
        page:
            expose: true
            groups: [Default, Hateoas]
        pages:
            expose: true
            groups: [Default, Hateoas]
